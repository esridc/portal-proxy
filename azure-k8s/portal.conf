
server {
  listen 80;
  listen 443 ssl;
  #for this proxy use google's DNS, portal is now open to the world and the DNS is public
  #Esri's internal DNS is added as well as a fallback for when on VPN/in office
  resolver             8.8.8.8 10.44.16.231 valid=60s;
  resolver_timeout     5s;
  ssl_certificate /etc/nginx/ssl/portal.crt;
  ssl_certificate_key /etc/nginx/ssl/portal.key;
  server_name aks.demo-gis.com;
  
  # root /srv/www;

  # Live-reload is tricky as it's served by ember vs a static file
  # location /portal/apps/sites/ember-cli-live-reload.js {
  #   try_files  $uri /srv/www/ember-cli-live-reload.js;
  # }

  # will look for files in ./dist/sites/portal/apps/sites
  # which is where the `yarn portaldev` command will output them
  location /aks/apps/sites {
    root /srv/www/sites;
    error_page 404 /ui-404.html;
    default_type text/html;
    add_header Access-Control-Allow-Origin *;
  }

  location ~ /ui-404.html {
    root /srv/www/portal/errors;
    internal;
  }

  location /portal {
    try_files $uri @portal;
  }

  # connect the remote feature|map server
  location /server {
    try_files $uri @portal;
  }

  location / {
    return 301 /aks/home/;
  }

  # location @ember {
  #   proxy_pass $scheme://127.0.0.1:4200;
  # }

  location @portal {
    # Original
    proxy_set_header Host aks.demo-gis.com;
    set $portal "40.125.102.143";
    proxy_pass $scheme://$portal;
    
    # SSL 
    # While this *works* we still see the same errors in the logs
    # proxy_set_header Host portal.hubdev.arcgis.com;
    # proxy_pass $scheme://portal.dev.hub.geocloud.com;
    # proxy_ssl_name portal.dev.hub.geocloud.com;
    # proxy_ssl_server_name on;
    
    # SSL server_name off
    # Errors
    #> upstream server temporarily disabled while SSL handshaking to upstream
    # proxy_set_header Host portal.hubdev.arcgis.com;
    # proxy_pass $scheme://portal.dev.hub.geocloud.com;
    # proxy_ssl_name portal.dev.hub.geocloud.com;
    # proxy_ssl_server_name off;
    
  }
}
